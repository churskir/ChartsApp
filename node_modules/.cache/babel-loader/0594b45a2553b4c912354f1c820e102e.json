{"ast":null,"code":"import _objectSpread from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_XY_POINT, REMOVE_XY_POINT, EDIT_XY_POINT, REMOVE_ALL_NAMEANDVALUE_POINT, REMOVE_ALL_XY_POINTS } from \"../../types\";\nvar initialState = {\n  points: {\n    points: []\n  }\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_XY_POINT:\n      var points = state.points.points;\n      points.push(action.payload);\n      points.sort(function (a, b) {\n        return a.x - b.x;\n      });\n      return _objectSpread({}, state, {\n        points: {\n          'points': points\n        }\n      });\n\n    case REMOVE_XY_POINT:\n      points = state.points.points;\n      points = points.filter(function (point) {\n        return point.id !== action.payload;\n      });\n      return _objectSpread({}, state, {\n        points: {\n          'points': points\n        }\n      });\n\n    case EDIT_XY_POINT:\n      points = state.points.points;\n      points.forEach(function (point, id) {\n        if (point.id === action.payload.id) {\n          point.x = action.payload.newX;\n          point.y = action.payload.newY;\n        }\n      });\n      return _objectSpread({}, state, {\n        points: {\n          'points': points\n        }\n      });\n\n    case REMOVE_ALL_XY_POINTS:\n      return _objectSpread({}, state, {\n        points: {\n          points: []\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/radek/Zajęcia/Projektowanie interfejsów graficznych/ChartsApp/src/state/actions/points/pointsReducers.js"],"names":["ADD_XY_POINT","REMOVE_XY_POINT","EDIT_XY_POINT","REMOVE_ALL_NAMEANDVALUE_POINT","REMOVE_ALL_XY_POINTS","initialState","points","state","action","type","push","payload","sort","a","b","x","filter","point","id","forEach","newX","y","newY"],"mappings":";AAAA,SACIA,YADJ,EAEIC,eAFJ,EAGIC,aAHJ,EAIIC,6BAJJ,EAKIC,oBALJ,QAMO,aANP;AAQA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AACJA,IAAAA,MAAM,EAAE;AADJ;AADS,CAArB;AAMA,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,YAAL;AACI,UAAIM,MAAM,GAAGC,KAAK,CAACD,MAAN,CAAaA,MAA1B;AACAA,MAAAA,MAAM,CAACI,IAAP,CAAYF,MAAM,CAACG,OAAnB;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACxB,eAAOD,CAAC,CAACE,CAAF,GAAMD,CAAC,CAACC,CAAf;AACH,OAFD;AAGA,+BACOR,KADP;AAEID,QAAAA,MAAM,EAAE;AACJ,oBAAUA;AADN;AAFZ;;AAMJ,SAAKL,eAAL;AACIK,MAAAA,MAAM,GAAGC,KAAK,CAACD,MAAN,CAAaA,MAAtB;AACAA,MAAAA,MAAM,GAAGA,MAAM,CAACU,MAAP,CAAc,UAAAC,KAAK,EAAI;AAC5B,eAAOA,KAAK,CAACC,EAAN,KAAaV,MAAM,CAACG,OAA3B;AACH,OAFQ,CAAT;AAGA,+BACOJ,KADP;AAEID,QAAAA,MAAM,EAAE;AACJ,oBAAUA;AADN;AAFZ;;AAMJ,SAAKJ,aAAL;AACII,MAAAA,MAAM,GAAGC,KAAK,CAACD,MAAN,CAAaA,MAAtB;AACAA,MAAAA,MAAM,CAACa,OAAP,CAAe,UAACF,KAAD,EAAQC,EAAR,EAAe;AAC1B,YAAID,KAAK,CAACC,EAAN,KAAaV,MAAM,CAACG,OAAP,CAAeO,EAAhC,EAAoC;AAChCD,UAAAA,KAAK,CAACF,CAAN,GAAUP,MAAM,CAACG,OAAP,CAAeS,IAAzB;AACAH,UAAAA,KAAK,CAACI,CAAN,GAAUb,MAAM,CAACG,OAAP,CAAeW,IAAzB;AACH;AACJ,OALD;AAMA,+BACOf,KADP;AAEID,QAAAA,MAAM,EAAE;AACJ,oBAAUA;AADN;AAFZ;;AAMJ,SAAKF,oBAAL;AACI,+BACOG,KADP;AAEID,QAAAA,MAAM,EAAE;AACJA,UAAAA,MAAM,EAAE;AADJ;AAFZ;;AAMJ;AACI,aAAOC,KAAP;AA9CR;AAgDH","sourcesContent":["import {\n    ADD_XY_POINT,\n    REMOVE_XY_POINT,\n    EDIT_XY_POINT,\n    REMOVE_ALL_NAMEANDVALUE_POINT,\n    REMOVE_ALL_XY_POINTS\n} from \"../../types\";\n\nconst initialState = {\n    points: {\n        points: []\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_XY_POINT:\n            let points = state.points.points;\n            points.push(action.payload);\n            points.sort(function (a, b) {\n                return a.x - b.x;\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_XY_POINT:\n            points = state.points.points;\n            points = points.filter(point => {\n                return point.id !== action.payload\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case EDIT_XY_POINT:\n            points = state.points.points;\n            points.forEach((point, id) => {\n                if (point.id === action.payload.id) {\n                    point.x = action.payload.newX;\n                    point.y = action.payload.newY;\n                }\n            });\n            return {\n                ...state,\n                points: {\n                    'points': points\n                }\n            };\n        case REMOVE_ALL_XY_POINTS:\n            return {\n                ...state,\n                points: {\n                    points: []\n                }\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}