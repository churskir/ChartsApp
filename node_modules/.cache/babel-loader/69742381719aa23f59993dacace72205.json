{"ast":null,"code":"import _defineProperty from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/src/views/components/dataInputs/NameAndValueDataInput.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPoint, removePoint, editPoint } from \"../../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\nimport { setNameLabel, setValueLabel } from \"../../../state/actions/selections/selectionsActions\";\nimport uuid from \"uuid\";\nimport $ from \"jquery\";\nimport \"./NameAndValueDataInput.css\";\nimport { CSVLink } from \"react-csv\";\n\nvar NameAndValueDataInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NameAndValueDataInput, _Component);\n\n  function NameAndValueDataInput(props) {\n    var _this;\n\n    _classCallCheck(this, NameAndValueDataInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NameAndValueDataInput).call(this, props));\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.addPoint = function () {\n      var newRecord = {\n        id: uuid(),\n        name: _this.state.newName,\n        value: _this.state.newValue\n      };\n\n      if (newRecord.name !== \"\" && newRecord.value !== \"\") {\n        if (isNaN(newRecord.value)) {\n          _this.setState({\n            errorMessage: \"Wartość Y nie jest liczbą\"\n          });\n\n          return;\n        }\n\n        var xValues = Object.values(_this.props.points.points).filter(function (point) {\n          return point.x === newRecord.x;\n        });\n\n        _this.props.addPoint(newRecord);\n\n        _this.setState({\n          errorMessage: \"\",\n          newName: \"\",\n          newValue: \"\"\n        });\n\n        $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n      } else {\n        _this.setState({\n          errorMessage: \"Obie wartości muszą być wypełnione\"\n        });\n      }\n    };\n\n    _this.nameInputRef = React.createRef();\n    _this.valueInputRef = React.createRef();\n    _this.state = {\n      points: [],\n      newName: \"\",\n      newValue: \"\",\n      errorMessage: \"\",\n      editMode: [],\n      type: \"Punktowy\",\n      nameEditMode: false,\n      valueEditMode: false\n    };\n    return _this;\n  }\n\n  _createClass(NameAndValueDataInput, [{\n    key: \"removePoint\",\n    value: function removePoint(id) {\n      this.props.removePoint(id);\n    }\n  }, {\n    key: \"editModeTurnOn\",\n    value: function editModeTurnOn(id) {\n      var editMode = this.state.editMode;\n      editMode.push(id);\n      this.setState({\n        editMode: editMode\n      });\n    }\n  }, {\n    key: \"editModeTurnOff\",\n    value: function editModeTurnOff(id) {\n      var newName = $(\"#x_\" + id).val();\n      var newValue = $(\"#y_\" + id).val();\n      var edit = true;\n\n      if (newName === \"\" || newValue === \"\") {\n        this.setState({\n          errorMessage: \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n        });\n        edit = false;\n      }\n\n      if (isNaN(newValue)) {\n        this.setState({\n          errorMessage: \"Nie można było zmienić wartości. Nowa wartość Y musi być liczbą\"\n        });\n        edit = false;\n      }\n\n      if (edit) this.props.editPoint(id, newName, newValue);\n      var editMode = this.state.editMode;\n      editMode = editMode.filter(function (data) {\n        return data !== id;\n      });\n      this.setState({\n        editMode: editMode\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Dane:\")), React.createElement(\"div\", {\n        className: \"list\",\n        id: \"listDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.state.nameEditMode === true ? React.createElement(\"th\", {\n        className: \"valueWidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: this.nameInputRef,\n        className: \"inputField\",\n        autoFocus: true,\n        defaultValue: this.props.selections.nameLabel,\n        onBlur: function onBlur() {\n          _this2.props.setNameLabel(_this2.nameInputRef.current.value);\n\n          _this2.setState({\n            nameEditMode: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })) : React.createElement(\"th\", {\n        className: \"valueWidth\",\n        onClick: function onClick() {\n          _this2.setState({\n            nameEditMode: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, this.props.selections.nameLabel), this.state.valueEditMode === true ? React.createElement(\"th\", {\n        className: \"valueWidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: this.valueInputRef,\n        className: \"inputField\",\n        autoFocus: true,\n        defaultValue: this.props.selections.valueLabel,\n        onBlur: function onBlur() {\n          _this2.props.setValueLabel(_this2.valueInputRef.current.value);\n\n          _this2.setState({\n            valueEditMode: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })) : React.createElement(\"th\", {\n        className: \"valueWidth\",\n        onClick: function onClick() {\n          _this2.setState({\n            valueEditMode: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.props.selections.valueLabel), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Akcje\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, Object.values(this.props.points.points).map(function (point) {\n        return React.createElement(\"tr\", {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, !_this2.state.editMode.includes(point.id) && React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"valueWidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, point.name), React.createElement(\"td\", {\n          className: \"valueWidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, point.value)), _this2.state.editMode.includes(point.id) && React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"valueWidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"newValueInput text-center\",\n          defaultValue: point.name,\n          id: \"x_\" + point.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          className: \"valueWidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"newValueInput text-center\",\n          defaultValue: point.value,\n          id: \"y_\" + point.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          className: \"buttonsWidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, _this2.state.editMode.includes(point.id) ? React.createElement(\"button\", {\n          className: \"btn btn-success btn-small tableButton mx-3\",\n          onClick: function onClick() {\n            _this2.editModeTurnOff(point.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, \"Zapisz\") : React.createElement(\"button\", {\n          className: \"btn btn-success btn-small tableButton mx-3\",\n          onClick: function onClick() {\n            _this2.editModeTurnOn(point.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, \"Edytuj\"), React.createElement(\"button\", {\n          className: \"btn btn-danger btn-small tableButton mx-3\",\n          onClick: function onClick() {\n            _this2.removePoint(point.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, \"Usu\\u0144\")));\n      })))), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-input text-center newNameInput\",\n        name: \"newName\",\n        id: \"newName\",\n        value: this.state.newName,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-input text-center newValueInput\",\n        name: \"newValue\",\n        id: \"newValue\",\n        value: this.state.newValue,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-block btn-sm\",\n        onClick: this.addPoint,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Dodaj\"))), this.props.selections.helpVisible && React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Przy tej wybranej rodzinie wykres\\xF3w pierwsza warto\\u015B\\u0107 mo\\u017Ce by\\u0107 dowolnym s\\u0142owem (kategoria), a druga warto\\u015Bci\\u0105 numeryczn\\u0105\"))))), React.createElement(\"h6\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \" \", this.state.errorMessage, \" \"));\n    }\n  }]);\n\n  return NameAndValueDataInput;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    points: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addPoint: addPoint,\n  removePoint: removePoint,\n  editPoint: editPoint,\n  setNameLabel: setNameLabel,\n  setValueLabel: setValueLabel\n})(NameAndValueDataInput);","map":{"version":3,"sources":["/home/radek/Zajęcia/Projektowanie interfejsów graficznych/ChartsApp/src/views/components/dataInputs/NameAndValueDataInput.js"],"names":["React","Component","PropTypes","connect","addPoint","removePoint","editPoint","setNameLabel","setValueLabel","uuid","$","CSVLink","NameAndValueDataInput","props","onChange","e","setState","target","name","value","newRecord","id","state","newName","newValue","isNaN","errorMessage","xValues","Object","values","points","filter","point","x","scrollTop","scrollHeight","nameInputRef","createRef","valueInputRef","editMode","type","nameEditMode","valueEditMode","push","val","edit","data","selections","nameLabel","current","valueLabel","map","includes","editModeTurnOff","editModeTurnOn","helpVisible","mapStateToProps","NameAndValuePoints","Selections"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\n\nimport {\n    setNameLabel,\n    setValueLabel\n} from \"../../../state/actions/selections/selectionsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./NameAndValueDataInput.css\";\nimport {CSVLink} from \"react-csv\";\n\nclass NameAndValueDataInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.nameInputRef = React.createRef();\n        this.valueInputRef = React.createRef();\n\n        this.state = {\n            points: [],\n            newName: \"\",\n            newValue: \"\",\n            errorMessage: \"\",\n            editMode: [],\n            type: \"Punktowy\",\n            nameEditMode: false,\n            valueEditMode: false\n        };\n    }\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n\n    addPoint = () => {\n        const newRecord = {\n            id: uuid(),\n            name: this.state.newName,\n            value: this.state.newValue\n        };\n\n        if (newRecord.name !== \"\" && newRecord.value !== \"\") {\n            if (isNaN(newRecord.value)) {\n                this.setState({\n                    errorMessage: \"Wartość Y nie jest liczbą\"\n                });\n                return;\n            }\n\n            let xValues = Object.values(this.props.points.points).filter(point => {\n                return point.x === newRecord.x;\n            });\n\n\n            this.props.addPoint(newRecord);\n            this.setState({\n                errorMessage: \"\",\n                newName: \"\",\n                newValue: \"\"\n            });\n\n            $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n        } else {\n            this.setState({\n                errorMessage: \"Obie wartości muszą być wypełnione\"\n            });\n        }\n    };\n\n    removePoint(id) {\n        this.props.removePoint(id);\n    }\n\n    editModeTurnOn(id) {\n        let editMode = this.state.editMode;\n        editMode.push(id);\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    editModeTurnOff(id) {\n        let newName = $(\"#x_\" + id).val();\n        let newValue = $(\"#y_\" + id).val();\n\n        let edit = true;\n\n        if (newName === \"\" || newValue === \"\") {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n            });\n            edit = false;\n        }\n        if (isNaN(newValue)) {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości. Nowa wartość Y musi być liczbą\"\n            });\n            edit = false;\n        }\n\n        if (edit) this.props.editPoint(id, newName, newValue);\n\n        let editMode = this.state.editMode;\n\n        editMode = editMode.filter(data => {\n            return data !== id;\n        });\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>\n                    <strong>Dane:</strong>\n                </h4>\n                <div className=\"list\" id=\"listDiv\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            {this.state.nameEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.nameInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.nameLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setNameLabel(this.nameInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          nameEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            nameEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.nameLabel}</th>\n                            }\n                            {this.state.valueEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.valueInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.valueLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setValueLabel(this.valueInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          valueEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            valueEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.valueLabel}</th>\n                            }\n                            <th>Akcje</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {Object.values(this.props.points.points).map(point => (\n                            <tr key={uuid()}>\n                                {!this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">{point.name}</td>\n                                        <td className=\"valueWidth\">{point.value}</td>\n                                    </React.Fragment>\n                                )}\n                                {this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.name}\n                                                id={\"x_\" + point.id}\n                                            />\n                                        </td>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.value}\n                                                id={\"y_\" + point.id}\n                                            />\n                                        </td>\n                                    </React.Fragment>\n                                )}\n                                <td className=\"buttonsWidth\">\n                                    {this.state.editMode.includes(point.id) ? (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOff(point.id);\n                                            }}\n                                        >\n                                            Zapisz\n                                        </button>\n                                    ) : (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOn(point.id);\n                                            }}\n                                        >\n                                            Edytuj\n                                        </button>\n                                    )}\n                                    <button\n                                        className=\"btn btn-danger btn-small tableButton mx-3\"\n                                        onClick={() => {\n                                            this.removePoint(point.id);\n                                        }}\n                                    >\n                                        Usuń\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th/>\n                        <th/>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>\n                            <input\n                                className=\"form-input text-center newNameInput\"\n                                name=\"newName\"\n                                id=\"newName\"\n                                value={this.state.newName}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                        <td>\n                            <input\n                                className=\"form-input text-center newValueInput\"\n                                name=\"newValue\"\n                                id=\"newValue\"\n                                value={this.state.newValue}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"3\">\n                            <button\n                                className=\"btn btn-primary btn-block btn-sm\"\n                                onClick={this.addPoint}\n                            >\n                                Dodaj\n                            </button>\n                        </td>\n                    </tr>\n                    {this.props.selections.helpVisible &&\n                    <tr>\n                        <td colSpan=\"3\">\n                            <span className=\"text-muted\">Przy tej wybranej rodzinie wykresów pierwsza wartość może być dowolnym słowem (kategoria),\n                            a druga wartością numeryczną</span>\n                        </td>\n                    </tr>\n                    }\n                    </tbody>\n                </table>\n                <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    points: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setNameLabel,\n        setValueLabel\n    }\n)(NameAndValueDataInput);\n"]},"metadata":{},"sourceType":"module"}