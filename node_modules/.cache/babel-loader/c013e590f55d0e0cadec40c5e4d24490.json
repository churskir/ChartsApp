{"ast":null,"code":"import _defineProperty from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/src/views/components/dataInputs/XYDataInput.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addPoint, removePoint, editPoint } from \"../../../state/actions/points/pointsActions\";\nimport { setXLabel, setYLabel } from \"../../../state/actions/selections/selectionsActions\";\nimport uuid from \"uuid\";\nimport $ from \"jquery\";\nimport \"./XYDataInput.css\";\n\nvar XYDataInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(XYDataInput, _Component);\n\n  function XYDataInput(props) {\n    var _this;\n\n    _classCallCheck(this, XYDataInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(XYDataInput).call(this, props));\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.addPoint = function () {\n      var newPoint = {\n        id: uuid(),\n        x: _this.state.newX,\n        y: _this.state.newY\n      };\n\n      if (newPoint.x !== \"\" && newPoint.y !== \"\") {\n        if (isNaN(newPoint.x)) {\n          _this.setState({\n            errorMessage: \"Wartość X nie jest liczbą\"\n          });\n\n          return;\n        }\n\n        if (isNaN(newPoint.y)) {\n          _this.setState({\n            errorMessage: \"Wartość Y nie jest liczbą\"\n          });\n\n          return;\n        }\n\n        var xValues = Object.values(_this.props.points.points).filter(function (point) {\n          return point.x === newPoint.x;\n        });\n\n        if (Object.values(xValues).length > 0) {\n          _this.setState({\n            errorMessage: \"Taka wartość X już istnieje\"\n          });\n\n          return;\n        }\n\n        _this.props.addPoint(newPoint);\n\n        _this.setState({\n          errorMessage: \"\",\n          newX: \"\",\n          newY: \"\"\n        });\n\n        $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n      } else {\n        _this.setState({\n          errorMessage: \"Obie wartości muszą być wypełnione\"\n        });\n      }\n    };\n\n    _this.xInputRef = React.createRef();\n    _this.yInputRef = React.createRef();\n    _this.state = {\n      points: [],\n      newX: \"\",\n      newY: \"\",\n      errorMessage: \"\",\n      editMode: [],\n      type: \"Punktowy\",\n      xEditMode: false,\n      yEditMode: false\n    };\n    return _this;\n  }\n\n  _createClass(XYDataInput, [{\n    key: \"removePoint\",\n    value: function removePoint(id) {\n      this.props.removePoint(id);\n    }\n  }, {\n    key: \"editModeTurnOn\",\n    value: function editModeTurnOn(id) {\n      var editMode = this.state.editMode;\n      editMode.push(id);\n      this.setState({\n        editMode: editMode\n      });\n    }\n  }, {\n    key: \"editModeTurnOff\",\n    value: function editModeTurnOff(id) {\n      var newX = $(\"#x_\" + id).val();\n      var newY = $(\"#y_\" + id).val();\n      var edit = true;\n\n      if (newX === \"\" || newY === \"\") {\n        this.setState({\n          errorMessage: \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n        });\n        edit = false;\n      }\n\n      if (isNaN(newX) || isNaN(newY)) {\n        this.setState({\n          errorMessage: \"Nie można było zmienić wartości. Obie nowe wartości musza być liczbami\"\n        });\n        edit = false;\n      }\n\n      if (edit) this.props.editPoint(id, newX, newY);\n      var editMode = this.state.editMode;\n      editMode = editMode.filter(function (data) {\n        return data !== id;\n      });\n      this.setState({\n        editMode: editMode\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Dane:\")), React.createElement(\"div\", {\n        className: \"list\",\n        id: \"listDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.state.xEditMode === true ? React.createElement(\"th\", {\n        className: \"valueWidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: this.xInputRef,\n        className: \"inputField\",\n        autoFocus: true,\n        defaultValue: this.props.selections.xLabel,\n        onBlur: function onBlur() {\n          _this2.props.setXLabel(_this2.xInputRef.current.value);\n\n          _this2.setState({\n            xEditMode: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })) : React.createElement(\"th\", {\n        className: \"valueWidth\",\n        onClick: function onClick() {\n          _this2.setState({\n            xEditMode: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, this.props.selections.xLabel), this.state.yEditMode === true ? React.createElement(\"th\", {\n        className: \"valueWidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: this.yInputRef,\n        className: \"inputField\",\n        autoFocus: true,\n        defaultValue: this.props.selections.yLabel,\n        onBlur: function onBlur() {\n          _this2.props.setYLabel(_this2.yInputRef.current.value);\n\n          _this2.setState({\n            yEditMode: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })) : React.createElement(\"th\", {\n        className: \"valueWidth\",\n        onClick: function onClick() {\n          _this2.setState({\n            yEditMode: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, this.props.selections.yLabel), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Akcje\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, Object.values(this.props.points.points).map(function (point) {\n        return React.createElement(\"tr\", {\n          key: uuid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, !_this2.state.editMode.includes(point.id) && React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"valueWidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, point.x), React.createElement(\"td\", {\n          className: \"valueWidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, point.y)), _this2.state.editMode.includes(point.id) && React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"valueWidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"newValueInput text-center\",\n          defaultValue: point.x,\n          id: \"x_\" + point.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          className: \"valueWidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"newValueInput text-center\",\n          defaultValue: point.y,\n          id: \"y_\" + point.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          className: \"buttonsWidth\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, _this2.state.editMode.includes(point.id) ? React.createElement(\"button\", {\n          className: \"btn btn-success btn-small tableButton mx-3\",\n          onClick: function onClick() {\n            _this2.editModeTurnOff(point.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"Zapisz\") : React.createElement(\"button\", {\n          className: \"btn btn-success btn-small tableButton mx-3\",\n          onClick: function onClick() {\n            _this2.editModeTurnOn(point.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, \"Edytuj\"), React.createElement(\"button\", {\n          className: \"btn btn-danger btn-small tableButton mx-3\",\n          onClick: function onClick() {\n            _this2.removePoint(point.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, \"Usu\\u0144\")));\n      })))), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-input text-center newValueInput\",\n        name: \"newX\",\n        id: \"newX\",\n        value: this.state.newX,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-input text-center newValueInput\",\n        name: \"newY\",\n        id: \"newY\",\n        value: this.state.newY,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-block btn-sm\",\n        onClick: this.addPoint,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Dodaj\"))), this.props.selections.helpVisible && React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Przy tej wybranej rodzinie wykres\\xF3w obie wprowadzane warto\\u015Bci musz\\u0105 by\\u0107 warto\\u015Bciami numerycznymi\"))))), React.createElement(\"h6\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \" \", this.state.errorMessage, \" \"));\n    }\n  }]);\n\n  return XYDataInput;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    points: state.XandYPoints.points,\n    selections: state.Selections.selections\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addPoint: addPoint,\n  removePoint: removePoint,\n  editPoint: editPoint,\n  setXLabel: setXLabel,\n  setYLabel: setYLabel\n})(XYDataInput);","map":{"version":3,"sources":["/home/radek/Zajęcia/Projektowanie interfejsów graficznych/ChartsApp/src/views/components/dataInputs/XYDataInput.js"],"names":["React","Component","connect","addPoint","removePoint","editPoint","setXLabel","setYLabel","uuid","$","XYDataInput","props","onChange","e","setState","target","name","value","newPoint","id","x","state","newX","y","newY","isNaN","errorMessage","xValues","Object","values","points","filter","point","length","scrollTop","scrollHeight","xInputRef","createRef","yInputRef","editMode","type","xEditMode","yEditMode","push","val","edit","data","selections","xLabel","current","yLabel","map","includes","editModeTurnOff","editModeTurnOn","helpVisible","mapStateToProps","XandYPoints","Selections"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nimport {connect} from \"react-redux\";\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../../state/actions/points/pointsActions\";\n\n\nimport {\n    setXLabel,\n    setYLabel\n} from \"../../../state/actions/selections/selectionsActions\";\n\nimport uuid from \"uuid\";\n\nimport $ from \"jquery\";\n\nimport \"./XYDataInput.css\";\n\nclass XYDataInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.xInputRef = React.createRef();\n        this.yInputRef = React.createRef();\n\n\n        this.state = {\n            points: [],\n            newX: \"\",\n            newY: \"\",\n            errorMessage: \"\",\n            editMode: [],\n            type: \"Punktowy\",\n            xEditMode: false,\n            yEditMode: false\n        };\n    }\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n\n    addPoint = () => {\n        const newPoint = {\n            id: uuid(),\n            x: this.state.newX,\n            y: this.state.newY\n        };\n\n        if (newPoint.x !== \"\" && newPoint.y !== \"\") {\n            if (isNaN(newPoint.x)) {\n                this.setState({\n                    errorMessage: \"Wartość X nie jest liczbą\"\n                });\n                return;\n            }\n\n            if (isNaN(newPoint.y)) {\n                this.setState({\n                    errorMessage: \"Wartość Y nie jest liczbą\"\n                });\n                return;\n            }\n\n            let xValues = Object.values(this.props.points.points).filter(point => {\n                return point.x === newPoint.x;\n            })\n\n            if (Object.values(xValues).length > 0) {\n                this.setState({\n                    errorMessage: \"Taka wartość X już istnieje\"\n                });\n                return;\n            }\n\n\n            this.props.addPoint(newPoint);\n            this.setState({\n                errorMessage: \"\",\n                newX: \"\",\n                newY: \"\"\n            });\n\n            $(\"#listDiv\").scrollTop($(\"#listDiv\")[0].scrollHeight);\n        } else {\n            this.setState({\n                errorMessage: \"Obie wartości muszą być wypełnione\"\n            });\n        }\n    };\n\n    removePoint(id) {\n        this.props.removePoint(id);\n    }\n\n    editModeTurnOn(id) {\n        let editMode = this.state.editMode;\n        editMode.push(id);\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    editModeTurnOff(id) {\n        let newX = $(\"#x_\" + id).val();\n        let newY = $(\"#y_\" + id).val();\n\n        let edit = true;\n\n        if (newX === \"\" || newY === \"\") {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości, ponieważ nowa wartość jest pusta\"\n            });\n            edit = false;\n        }\n        if (isNaN(newX) || isNaN(newY)) {\n            this.setState({\n                errorMessage:\n                    \"Nie można było zmienić wartości. Obie nowe wartości musza być liczbami\"\n            });\n            edit = false;\n        }\n\n        if (edit) this.props.editPoint(id, newX, newY);\n\n        let editMode = this.state.editMode;\n\n        editMode = editMode.filter(data => {\n            return data !== id;\n        });\n        this.setState({\n            editMode: editMode\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>\n                    <strong>Dane:</strong>\n                </h4>\n                <div className=\"list\" id=\"listDiv\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            {this.state.xEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.xInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.xLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setXLabel(this.xInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          xEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            xEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.xLabel}</th>\n                            }\n                            {this.state.yEditMode === true ?\n                                <th className=\"valueWidth\"><input ref={this.yInputRef} className=\"inputField\"\n                                                                  autoFocus={true}\n                                                                  defaultValue={this.props.selections.yLabel}\n                                                                  onBlur={() => {\n\n                                                                      this.props.setYLabel(this.yInputRef.current.value);\n\n\n                                                                      this.setState({\n                                                                          yEditMode: false\n                                                                      })\n                                                                  }\n                                                                  }\n                                /></th>\n                                :\n                                <th className=\"valueWidth\"\n                                    onClick={() => {\n                                        this.setState({\n                                            yEditMode: true\n                                        })\n                                    }\n                                    }\n                                >{this.props.selections.yLabel}</th>\n                            }\n                            <th>Akcje</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {Object.values(this.props.points.points).map(point => (\n                            <tr key={uuid()}>\n                                {!this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">{point.x}</td>\n                                        <td className=\"valueWidth\">{point.y}</td>\n                                    </React.Fragment>\n                                )}\n                                {this.state.editMode.includes(point.id) && (\n                                    <React.Fragment>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.x}\n                                                id={\"x_\" + point.id}\n                                            />\n                                        </td>\n                                        <td className=\"valueWidth\">\n                                            <input\n                                                className=\"newValueInput text-center\"\n                                                defaultValue={point.y}\n                                                id={\"y_\" + point.id}\n                                            />\n                                        </td>\n                                    </React.Fragment>\n                                )}\n                                <td className=\"buttonsWidth\">\n                                    {this.state.editMode.includes(point.id) ? (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOff(point.id);\n                                            }}\n                                        >\n                                            Zapisz\n                                        </button>\n                                    ) : (\n                                        <button\n                                            className=\"btn btn-success btn-small tableButton mx-3\"\n                                            onClick={() => {\n                                                this.editModeTurnOn(point.id);\n                                            }}\n                                        >\n                                            Edytuj\n                                        </button>\n                                    )}\n                                    <button\n                                        className=\"btn btn-danger btn-small tableButton mx-3\"\n                                        onClick={() => {\n                                            this.removePoint(point.id);\n                                        }}\n                                    >\n                                        Usuń\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th/>\n                        <th/>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td>\n                            <input\n                                className=\"form-input text-center newValueInput\"\n                                name=\"newX\"\n                                id=\"newX\"\n                                value={this.state.newX}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                        <td>\n                            <input\n                                className=\"form-input text-center newValueInput\"\n                                name=\"newY\"\n                                id=\"newY\"\n                                value={this.state.newY}\n                                onChange={this.onChange}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"3\">\n                            <button\n                                className=\"btn btn-primary btn-block btn-sm\"\n                                onClick={this.addPoint}\n                            >\n                                Dodaj\n                            </button>\n                        </td>\n                    </tr>\n                    {this.props.selections.helpVisible &&\n                    <tr>\n                        <td colSpan=\"3\">\n                            <span className=\"text-muted\">Przy tej wybranej rodzinie wykresów obie wprowadzane wartości muszą być wartościami numerycznymi</span>\n                        </td>\n                    </tr>\n                    }\n                    </tbody>\n                </table>\n                <h6 className=\"text-danger\"> {this.state.errorMessage} </h6>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    points: state.XandYPoints.points,\n    selections: state.Selections.selections\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setXLabel,\n        setYLabel\n    }\n)(XYDataInput);\n"]},"metadata":{},"sourceType":"module"}