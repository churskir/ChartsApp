{"ast":null,"code":"import _classCallCheck from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/src/views/pages/MainPage.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { CirclePicker, GithubPicker, SketchPicker, ChromePicker } from 'react-color';\nimport { addPoint, removePoint, editPoint } from \"../../state/actions/points/pointsActions\";\nimport { setSelectedChartsFamily } from \"../../state/actions/selections/selectionsActions\";\nimport XYDataInput from \"../components/dataInputs/XYDataInput\";\nimport NameAndValueDataInput from \"../components/dataInputs/NameAndValueDataInput\";\nimport PointsChart from \"../components/charts/PointsChart\";\nimport LinesChart from \"../components/charts/LinesChart\";\nimport HorizontalBarChart from \"../components/charts/HorizontalBarChart\";\nimport VerticalBarChart from \"../components/charts/VerticalBarChart\";\nimport CircleChart from \"../components/charts/CircleChart\";\nimport './MainPage.css';\n\nvar MainPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPage, _Component);\n\n  function MainPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPage).call(this, props));\n\n    _this.handleClick = function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    };\n\n    _this.handleClose = function (event) {\n      console.log(event);\n\n      _this.setState({\n        displayColorPicker: false\n      });\n    };\n\n    _this.handleChange = function (color) {\n      console.log(color);\n\n      _this.setState({\n        color: color.rgb,\n        hexColor: color.hex\n      });\n    };\n\n    _this.state = {\n      XandYPoints: [],\n      NumbersChartType: \"Punktowy\",\n      TextChartType: \"KolumnowyHoryzontalny\",\n      displayColorPicker: false,\n      color: {\n        r: '66',\n        g: '134',\n        b: '244',\n        a: '1'\n      },\n      hexColor: '#4286f4',\n      labelXYX: \"X\",\n      labelXYY: \"Y\"\n    };\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-12 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Wyb\\xF3r rodziny wykres\\xF3w:\"), React.createElement(\"button\", {\n        className: \"btn btn-dark mx-4\",\n        onClick: function onClick() {\n          _this2.props.setSelectedChartsFamily(\"Liczbowe\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Liczbowe\"), React.createElement(\"button\", {\n        className: \"btn btn-dark mx-4\",\n        onClick: function onClick() {\n          _this2.props.setSelectedChartsFamily(\"Tekstowe\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Tekstowe\"))), this.props.selections.helpVisible && React.createElement(\"div\", {\n        className: \"row mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Wykresy liczbowe to wykres punktowy i liniowy.\")), React.createElement(\"div\", {\n        className: \"col-sm-6 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Wykresy tekstowe to wykresy kolumnowe (horyzontalne i wertykalne oraz wykres ko\\u0142owy\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.props.selections.family === \"Liczbowe\" && React.createElement(\"div\", {\n        className: \"col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(XYDataInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), this.props.selections.family === \"Tekstowe\" && React.createElement(\"div\", {\n        className: \"col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(NameAndValueDataInput, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Wykres:\")), this.props.selections.family === \"Liczbowe\" && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chartArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.NumbersChartType === \"Punktowy\" && React.createElement(PointsChart, {\n        points: this.props.xypoints,\n        color: this.state.hexColor,\n        xLabel: this.props.selections.xLabel,\n        yLabel: this.props.selections.yLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), this.state.NumbersChartType === \"Liniowy\" && React.createElement(LinesChart, {\n        points: this.props.xypoints,\n        color: this.state.hexColor,\n        xLabel: this.props.selections.xLabel,\n        yLabel: this.props.selections.yLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-dark mx-4\",\n        onClick: function onClick() {\n          _this2.setState({\n            NumbersChartType: \"Punktowy\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Punktowy\"), React.createElement(\"button\", {\n        className: \"btn btn-dark mx-4\",\n        onClick: function onClick() {\n          _this2.setState({\n            NumbersChartType: \"Liniowy\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Liniowy\")), this.props.selections.family === \"Tekstowe\" && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chartArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.TextChartType === \"KolumnowyHoryzontalny\" && React.createElement(HorizontalBarChart, {\n        points: this.props.nvpoints,\n        color: this.state.hexColor,\n        nameLabel: this.props.selections.nameLabel,\n        valueLabel: this.props.selections.valueLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), this.state.TextChartType === \"KolumnowyWertykalny\" && React.createElement(VerticalBarChart, {\n        points: this.props.nvpoints,\n        color: this.state.hexColor,\n        nameLabel: this.props.selections.nameLabel,\n        valueLabel: this.props.selections.valueLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), this.state.TextChartType === \"Kolowy\" && React.createElement(CircleChart, {\n        points: this.props.nvpoints,\n        color: this.state.hexColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-dark mx-4\",\n        onClick: function onClick() {\n          _this2.setState({\n            TextChartType: \"KolumnowyHoryzontalny\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Kolumnowy Horyzontalny\"), React.createElement(\"button\", {\n        className: \"btn btn-dark mx-4\",\n        onClick: function onClick() {\n          _this2.setState({\n            TextChartType: \"KolumnowyWertykalny\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Kolumnowy Wertykalny\"), React.createElement(\"button\", {\n        className: \"btn btn-dark mx-4\",\n        onClick: function onClick() {\n          _this2.setState({\n            TextChartType: \"Kolowy\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Ko\\u0142owy\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(CirclePicker, {\n        className: \"colorPicker\",\n        color: this.state.color,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }))), this.props.selections.helpVisible && React.createElement(\"div\", {\n        className: \"row mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-12 mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Wybrany tutaj kolor b\\u0119dzie ustawiony dla wszystkich typ\\xF3w wykres\\xF3w\"))))));\n    }\n  }]);\n\n  return MainPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addPoint: addPoint,\n  removePoint: removePoint,\n  editPoint: editPoint,\n  setSelectedChartsFamily: setSelectedChartsFamily\n})(MainPage);","map":{"version":3,"sources":["/home/radek/Zajęcia/Projektowanie interfejsów graficznych/ChartsApp/src/views/pages/MainPage.js"],"names":["React","Component","PropTypes","connect","CirclePicker","GithubPicker","SketchPicker","ChromePicker","addPoint","removePoint","editPoint","setSelectedChartsFamily","XYDataInput","NameAndValueDataInput","PointsChart","LinesChart","HorizontalBarChart","VerticalBarChart","CircleChart","MainPage","props","handleClick","setState","displayColorPicker","state","handleClose","event","console","log","handleChange","color","rgb","hexColor","hex","XandYPoints","NumbersChartType","TextChartType","r","g","b","a","labelXYX","labelXYY","selections","helpVisible","family","xypoints","xLabel","yLabel","nvpoints","nameLabel","valueLabel","mapStateToProps","points","NameAndValuePoints","Selections"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\n\nimport {CirclePicker, GithubPicker, SketchPicker, ChromePicker} from 'react-color';\n\nimport {\n    addPoint,\n    removePoint,\n    editPoint\n} from \"../../state/actions/points/pointsActions\";\n\nimport {setSelectedChartsFamily} from \"../../state/actions/selections/selectionsActions\"\n\nimport XYDataInput from \"../components/dataInputs/XYDataInput\";\nimport NameAndValueDataInput from \"../components/dataInputs/NameAndValueDataInput\";\n\nimport PointsChart from \"../components/charts/PointsChart\";\nimport LinesChart from \"../components/charts/LinesChart\";\nimport HorizontalBarChart from \"../components/charts/HorizontalBarChart\";\nimport VerticalBarChart from \"../components/charts/VerticalBarChart\";\nimport CircleChart from \"../components/charts/CircleChart\";\n\nimport './MainPage.css'\n\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            XandYPoints: [],\n            NumbersChartType: \"Punktowy\",\n            TextChartType: \"KolumnowyHoryzontalny\",\n            displayColorPicker: false,\n            color: {\n                r: '66',\n                g: '134',\n                b: '244',\n                a: '1',\n            },\n            hexColor: '#4286f4',\n            labelXYX: \"X\",\n            labelXYY: \"Y\"\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    handleClick = () => {\n        this.setState({displayColorPicker: !this.state.displayColorPicker})\n    };\n\n    handleClose = (event) => {\n        console.log(event);\n        this.setState({displayColorPicker: false})\n    };\n\n    handleChange = (color) => {\n        console.log(color);\n        this.setState({\n            color: color.rgb,\n            hexColor: color.hex\n        })\n    };\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm-12 center\">\n                        <h3>Wybór rodziny wykresów:</h3>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Liczbowe\");\n                            }}\n                        >Liczbowe\n                        </button>\n                        <button\n                            className=\"btn btn-dark mx-4\"\n                            onClick={() => {\n                                this.props.setSelectedChartsFamily(\"Tekstowe\");\n                            }}\n                        >Tekstowe\n                        </button>\n                    </div>\n                </div>\n                {this.props.selections.helpVisible &&\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm-6 center\">\n                        <span className=\"text-muted\">Wykresy liczbowe to wykres punktowy i liniowy.</span>\n                    </div>\n                    <div className=\"col-sm-6 center\">\n                         <span className=\"text-muted\">Wykresy tekstowe to wykresy kolumnowe (horyzontalne i wertykalne\n                        oraz wykres kołowy</span>\n                    </div>\n                </div>\n                }\n\n                <div className=\"row\">\n                    {this.props.selections.family === \"Liczbowe\" &&\n                    <div className=\"col-sm-4\">\n                        <XYDataInput/>\n                    </div>\n                    }\n                    {this.props.selections.family === \"Tekstowe\" &&\n                    <div className=\"col-sm-4\">\n                        <NameAndValueDataInput/>\n                    </div>\n                    }\n\n                    <div className=\"col-sm-8\">\n                        <h4>\n                            <strong>Wykres:</strong>\n                        </h4>\n                        {this.props.selections.family === \"Liczbowe\" &&\n                        <React.Fragment>\n                            <div className=\"chartArea\">\n                                {\n                                    this.state.NumbersChartType === \"Punktowy\" && (\n                                        <PointsChart points={this.props.xypoints} color={this.state.hexColor} xLabel={this.props.selections.xLabel} yLabel={this.props.selections.yLabel}/>\n                                    )\n                                }\n                                {this.state.NumbersChartType === \"Liniowy\" && (\n                                    <LinesChart points={this.props.xypoints} color={this.state.hexColor} xLabel={this.props.selections.xLabel} yLabel={this.props.selections.yLabel}/>\n                                )\n                                }\n                            </div>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Punktowy\"\n                                    });\n                                }}\n                            >\n                                Punktowy\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        NumbersChartType: \"Liniowy\"\n                                    });\n                                }}\n                            >\n                                Liniowy\n                            </button>\n                        </React.Fragment>\n                        }\n\n                        {this.props.selections.family === \"Tekstowe\" &&\n                        <React.Fragment>\n                            <div className=\"chartArea\">\n                            {\n                                this.state.TextChartType === \"KolumnowyHoryzontalny\" && (\n                                    <HorizontalBarChart points={this.props.nvpoints} color={this.state.hexColor} nameLabel={this.props.selections.nameLabel} valueLabel={this.props.selections.valueLabel}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"KolumnowyWertykalny\" && (\n                                    <VerticalBarChart points={this.props.nvpoints} color={this.state.hexColor} nameLabel={this.props.selections.nameLabel} valueLabel={this.props.selections.valueLabel}/>\n                                )\n                            }\n                            {\n                                this.state.TextChartType === \"Kolowy\" && (\n                                    <CircleChart points={this.props.nvpoints} color={this.state.hexColor}/>\n                                )\n                            }\n                            </div>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyHoryzontalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Horyzontalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"KolumnowyWertykalny\"\n                                    });\n                                }}\n                            >\n                                Kolumnowy Wertykalny\n                            </button>\n                            <button\n                                className=\"btn btn-dark mx-4\"\n                                onClick={() => {\n                                    this.setState({\n                                        TextChartType: \"Kolowy\"\n                                    });\n                                }}\n                            >\n                                Kołowy\n                            </button>\n                        </React.Fragment>\n                        }\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                <CirclePicker className=\"colorPicker\"\n                                              color={this.state.color}\n                                              onChange={this.handleChange}/>\n\n                            </div>\n                        </div>\n                        {this.props.selections.helpVisible &&\n                        <div className=\"row mt-2\">\n                            <div className=\"col-sm-12 mx-auto\">\n                                <span className=\"text-muted\">Wybrany tutaj kolor będzie ustawiony dla wszystkich typów wykresów</span>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        addPoint,\n        removePoint,\n        editPoint,\n        setSelectedChartsFamily\n    }\n)(MainPage);\n"]},"metadata":{},"sourceType":"module"}