{"ast":null,"code":"import _defineProperty from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/radek/Zaj\\u0119cia/Projektowanie interfejs\\xF3w graficznych/ChartsApp/src/views/components/Header.js\";\nimport React, { Component } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport { connect } from \"react-redux\";\nimport CSVReader from 'react-csv-reader';\nimport { addPoint as addXYPoint, removeAllXYPoints } from \"../../state/actions/points/pointsActions\";\nimport { addPoint as addNameValuePoint, removeAllNameAndValuePoints } from \"../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\nimport { setXLabel, setYLabel, setNameLabel, setValueLabel, setHelpVisible } from \"../../state/actions/selections/selectionsActions\";\nimport uuid from \"uuid\";\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.csvXYFileAdded = function (data) {\n      _this.props.removeAllXYPoints();\n\n      data.forEach(function (item, index) {\n        if (index !== 0) {\n          var newPoint = {\n            id: uuid(),\n            x: item[0],\n            y: item[1]\n          };\n\n          if (!isNaN(newPoint.x) && !isNaN(newPoint.y)) {\n            this.props.addXYPoint(newPoint);\n          }\n        } else {\n          this.props.setXLabel(item[0]);\n          this.props.setYLabel(item[1]);\n        }\n      }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    };\n\n    _this.csvNameValueFileAdded = function (data) {\n      _this.props.removeAllNameAndValuePoints();\n\n      data.forEach(function (item, index) {\n        if (index !== 0) {\n          var newPoint = {\n            id: uuid(),\n            name: item[0],\n            value: item[1]\n          };\n\n          if (!isNaN(newPoint.value)) {\n            this.props.addNameValuePoint(newPoint);\n          }\n        } else {\n          this.props.setNameLabel(item[0]);\n          this.props.setValueLabel(item[1]);\n        }\n      }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var csvXYData = [];\n      this.props.xypoints.points.forEach(function (point) {\n        var _csvXYData$push;\n\n        csvXYData.push((_csvXYData$push = {}, _defineProperty(_csvXYData$push, _this2.props.selections.xLabel, point.x), _defineProperty(_csvXYData$push, _this2.props.selections.yLabel, point.y), _csvXYData$push));\n      });\n      var csvNameValueData = [];\n      this.props.nvpoints.points.forEach(function (point) {\n        var _csvNameValueData$pus;\n\n        csvNameValueData.push((_csvNameValueData$pus = {}, _defineProperty(_csvNameValueData$pus, _this2.props.selections.nameLabel, point.name), _defineProperty(_csvNameValueData$pus, _this2.props.selections.valueLabel, point.value), _csvNameValueData$pus));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand\",\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"ChartsApp\"), React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarNav\",\n        \"aria-controls\": \"navbarNav\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbarNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"nav-link dropdown-toggle active\",\n        href: \"#\",\n        id: \"navbarDropdownMenuLink\",\n        role: \"button\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Plik\"), React.createElement(\"div\", {\n        className: \"dropdown-menu\",\n        \"aria-labelledby\": \"navbarDropdownMenuLink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        data: csvXYData,\n        filename: \"numericData.csv\",\n        className: \"dropdown-item text-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Pobierz dane liczbowe jako plik CSV\"), React.createElement(CSVLink, {\n        data: csvNameValueData,\n        filename: \"textData.csv\",\n        className: \"dropdown-item text-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Pobierz dane tekstowe jako plik CSV\"), React.createElement(\"div\", {\n        className: \"dropdown-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(CSVReader, {\n        cssClass: \"csv-reader-input dropdown-item text-dark\",\n        label: \"Dodaj dane liczbowe z pliku CSV\",\n        onFileLoaded: this.csvXYFileAdded,\n        onError: this.handleDarkSideForce,\n        inputId: \"csvNewData\",\n        inputStyle: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(CSVReader, {\n        cssClass: \"csv-reader-input dropdown-item text-dark\",\n        label: \"Dodaj dane tekstowe z pliku CSV\",\n        onFileLoaded: this.csvNameValueFileAdded,\n        onError: this.handleDarkSideForce,\n        inputId: \"csvNewData\",\n        inputStyle: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        className: \"nav-item dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"nav-link dropdown-toggle active\",\n        href: \"#\",\n        id: \"editNavbarMenuLink\",\n        role: \"button\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Edycja\"), React.createElement(\"div\", {\n        className: \"dropdown-menu\",\n        \"aria-labelledby\": \"editNavbarMenuLink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"dropdown-item\",\n        href: \"#\",\n        onClick: function onClick() {\n          _this2.props.removeAllXYPoints();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Usu\\u0144 wszystkie dane liczbowe\"), React.createElement(\"a\", {\n        className: \"dropdown-item\",\n        href: \"#\",\n        onClick: function onClick() {\n          _this2.props.removeAllNameAndValuePoints();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Usu\\u0144 wszystkie dane tekstowe\"))), this.props.selections.helpVisible === false && React.createElement(\"li\", {\n        className: \"nav-item active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"nav-link\",\n        href: \"#\",\n        onClick: function onClick() {\n          _this2.props.setHelpVisible(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Poka\\u017C pomoc\")), this.props.selections.helpVisible === true && React.createElement(\"li\", {\n        className: \"nav-item active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"nav-link\",\n        href: \"#\",\n        onClick: function onClick() {\n          _this2.props.setHelpVisible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Ukryj pomoc\")))))));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addXYPoint: addXYPoint,\n  addNameValuePoint: addNameValuePoint,\n  removeAllXYPoints: removeAllXYPoints,\n  removeAllNameAndValuePoints: removeAllNameAndValuePoints,\n  setXLabel: setXLabel,\n  setYLabel: setYLabel,\n  setNameLabel: setNameLabel,\n  setValueLabel: setValueLabel,\n  setHelpVisible: setHelpVisible\n})(Header);","map":{"version":3,"sources":["/home/radek/Zajęcia/Projektowanie interfejsów graficznych/ChartsApp/src/views/components/Header.js"],"names":["React","Component","CSVLink","connect","CSVReader","addPoint","addXYPoint","removeAllXYPoints","addNameValuePoint","removeAllNameAndValuePoints","setXLabel","setYLabel","setNameLabel","setValueLabel","setHelpVisible","uuid","Header","csvXYFileAdded","data","props","forEach","item","index","newPoint","id","x","y","isNaN","bind","csvNameValueFileAdded","name","value","csvXYData","xypoints","points","point","push","selections","xLabel","yLabel","csvNameValueData","nvpoints","nameLabel","valueLabel","handleDarkSideForce","color","helpVisible","mapStateToProps","state","XandYPoints","NameAndValuePoints","Selections"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {CSVLink} from \"react-csv\";\nimport {connect} from \"react-redux\";\nimport CSVReader from 'react-csv-reader'\n\nimport {\n    addPoint as addXYPoint,\n    removeAllXYPoints\n} from \"../../state/actions/points/pointsActions\";\n\nimport {\n    addPoint as addNameValuePoint,\n    removeAllNameAndValuePoints\n} from \"../../state/actions/nameAndValuePoints/nameAndValuePointsActions\";\n\nimport {\n    setXLabel,\n    setYLabel,\n    setNameLabel,\n    setValueLabel,\n    setHelpVisible\n} from \"../../state/actions/selections/selectionsActions\";\nimport uuid from \"uuid\";\n\nclass Header extends Component {\n\n\n    csvXYFileAdded = (data) => {\n\n        this.props.removeAllXYPoints();\n\n        data.forEach(function (item, index) {\n            if (index !== 0) {\n\n                const newPoint = {\n                    id: uuid(),\n                    x: item[0],\n                    y: item[1]\n                };\n\n                if (!isNaN(newPoint.x) && !isNaN(newPoint.y)) {\n                    this.props.addXYPoint(newPoint);\n                }\n            } else {\n                this.props.setXLabel(item[0]);\n                this.props.setYLabel(item[1]);\n            }\n        }.bind(this));\n    };\n\n    csvNameValueFileAdded = (data) => {\n\n        this.props.removeAllNameAndValuePoints();\n\n        data.forEach(function (item, index) {\n            if (index !== 0) {\n\n                const newPoint = {\n                    id: uuid(),\n                    name: item[0],\n                    value: item[1]\n                };\n\n                if (!isNaN(newPoint.value)) {\n                    this.props.addNameValuePoint(newPoint);\n                }\n            } else {\n                this.props.setNameLabel(item[0]);\n                this.props.setValueLabel(item[1]);\n            }\n        }.bind(this));\n\n    }\n\n    render() {\n        let csvXYData = [];\n        this.props.xypoints.points.forEach(point => {\n            csvXYData.push({\n                [this.props.selections.xLabel]: point.x,\n                [this.props.selections.yLabel]: point.y\n            });\n        });\n        let csvNameValueData = [];\n        this.props.nvpoints.points.forEach(point => {\n            csvNameValueData.push({\n                [this.props.selections.nameLabel]: point.name,\n                [this.props.selections.valueLabel]: point.value\n            });\n        });\n\n\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div className=\"container\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            ChartsApp\n                        </a>\n                        <button\n                            className=\"navbar-toggler\"\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#navbarNav\"\n                            aria-controls=\"navbarNav\"\n                            aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\"\n                        >\n                            <span className=\"navbar-toggler-icon\"/>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"navbarDropdownMenuLink\"\n                                       role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Plik\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                        <CSVLink data={csvXYData} filename={\"numericData.csv\"}\n                                                 className=\"dropdown-item text-dark\">Pobierz dane liczbowe jako plik\n                                            CSV</CSVLink>\n                                        <CSVLink data={csvNameValueData} filename={\"textData.csv\"}\n                                                 className=\"dropdown-item text-dark\">Pobierz dane tekstowe jako plik\n                                            CSV</CSVLink>\n                                        <div className=\"dropdown-divider\"></div>\n                                        <CSVReader\n                                            cssClass=\"csv-reader-input dropdown-item text-dark\"\n                                            label=\"Dodaj dane liczbowe z pliku CSV\"\n                                            onFileLoaded={this.csvXYFileAdded}\n                                            onError={this.handleDarkSideForce}\n                                            inputId=\"csvNewData\"\n                                            inputStyle={{color: 'black'}}\n                                        />\n                                        <CSVReader\n                                            cssClass=\"csv-reader-input dropdown-item text-dark\"\n                                            label=\"Dodaj dane tekstowe z pliku CSV\"\n                                            onFileLoaded={this.csvNameValueFileAdded}\n                                            onError={this.handleDarkSideForce}\n                                            inputId=\"csvNewData\"\n                                            inputStyle={{color: 'black'}}\n                                        />\n                                    </div>\n                                </li>\n\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle active\" href=\"#\" id=\"editNavbarMenuLink\"\n                                       role=\"button\"\n                                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Edycja\n                                    </a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"editNavbarMenuLink\">\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllXYPoints();\n                                           }}\n                                        >Usuń wszystkie dane liczbowe</a>\n                                        <a className=\"dropdown-item\" href=\"#\"\n                                           onClick={() => {\n                                               this.props.removeAllNameAndValuePoints();\n                                           }}\n                                        >Usuń wszystkie dane tekstowe</a>\n                                    </div>\n                                </li>\n                                {this.props.selections.helpVisible === false &&\n                                <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"#\"\n                                onClick={() => {\n                                this.props.setHelpVisible(true);\n                                }\n                                }\n                                >\n                                    Pokaż pomoc\n                                </a>\n                                </li>\n                                }\n                                {this.props.selections.helpVisible === true &&\n                                <li className=\"nav-item active\">\n                                    <a className=\"nav-link\" href=\"#\"\n                                    onClick={() => {\n                                    this.props.setHelpVisible(false);\n                                    }\n                                    }\n                                    >\n                                        Ukryj pomoc\n                                    </a>\n                                </li>\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    xypoints: state.XandYPoints.points,\n    nvpoints: state.NameAndValuePoints.points,\n    selections: state.Selections.selections\n\n});\n\n\nexport default connect(mapStateToProps, {\n    addXYPoint,\n    addNameValuePoint,\n    removeAllXYPoints,\n    removeAllNameAndValuePoints,\n    setXLabel,\n    setYLabel,\n    setNameLabel,\n    setValueLabel,\n    setHelpVisible\n})(Header);"]},"metadata":{},"sourceType":"module"}